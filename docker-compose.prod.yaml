services:
  backend:
    depends_on:
      database:
        condition: service_healthy
    image: "51.144.137.71:8080/kurnik-backend:${BACKEND_IMAGE_TAG:-latest}"
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - DB_HOST=pis-db
    restart: always

  backend-tests:
    build:
      context: backend/
      dockerfile: Dockerfile
      target: test
    environment:
      - PYTHONUNBUFFERED=1
      - DB_HOST=pis-db
  database:
    image: "postgres:16"
    container_name: pis-db
    environment:
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "admin"
      POSTGRES_DB: "pis"
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d pis"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    image: "51.144.137.71:8080/kurnik-frontend:${FRONTEND_IMAGE_TAG:-latest}"
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
    restart: always
